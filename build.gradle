plugins {
    id 'java-library'
    id 'io.freefair.lombok' version "8.11"
    id 'io.gatling.gradle' version '3.13.1'
    id 'io.qameta.allure' version "2.12.0"
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

def allureVersion = "2.29.0",
    restAssuredVersion = "5.5.0",
    javaFakerVersion = "1.0.2",
    ownerVersion = "1.0.12"

dependencies {
    testImplementation(
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.java-websocket:Java-WebSocket:1.5.7",
            "com.fasterxml.jackson.core:jackson-databind:2.18.2",
            "org.aspectj:aspectjweaver:1.9.22",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "org.assertj:assertj-core:3.26.3"
    )
    gatlingImplementation(
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion"
    )
}

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
    report {
        version.set(allureVersion)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

task rest(type: Test) {
    useJUnitPlatform {
        includeTags("rest")
    }
}

task socket(type: Test) {
    useJUnitPlatform {
        includeTags("socket")
    }
}

